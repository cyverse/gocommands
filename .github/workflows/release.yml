name: Release GoCommands
on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: ["linux"]
        goarch: ["386", "amd64", "arm", "arm64"]
        include: 
        - goos: "windows"
          goarch: "386"
        - goos: "windows"
          goarch: "amd64"
        - goos: "darwin"
          goarch: "amd64"
        - goos: "darwin"
          goarch: "arm64"
    env:
      PKG: "github.com/cyverse/gocommands"
    steps:
    - name: "set build date"
      run: echo "BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - uses: wangyoucao577/go-release-action@v1.31
      with:
        github_token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        goversion: 1.22
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        project_path: "./cmd/"
        binary_name: "gocmd"
        ldflags: "-X ${{ env.PKG }}/commons.clientVersion=${{ github.ref_name }} -X ${{ env.PKG }}/commons.gitCommit=${{ github.sha }} -X ${{ env.PKG }}/commons.buildDate=${{ env.BUILD_DATE }}"

  update-releases:
    name: Update Release Go Binary
    runs-on: ubuntu-latest
    needs: releases-matrix
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Specify the version of Python to use
  
    - name: Install dependencies
      run: python -m pip install --upgrade pip && pip install requests
  
    - name: Run Python script
      run: |
        python .github/workflows/update_release_table.py ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
      